"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const chalk = require("chalk");
const inquirer = require("inquirer");
const shell = require("shelljs");
const ghCli = require("../utils/gh");
const cli_ux_1 = require("cli-ux");
const issuePage = "https://github.com/AsgereDreemurr/CLI-ITU/issues";
class Feedback extends command_1.Command {
    async run() {
        const { flags } = this.parse(Feedback);
        if (flags.noprompt) {
            console.log("Opening " + issuePage);
            cli_ux_1.default.open(issuePage);
            return;
        }
        if (!ghCli.isInstalled())
            return;
        if (!ghCli.isAuthenticated())
            return;
        await inquirer
            .prompt([
            {
                name: "type",
                message: "What type of feedback are you reporting?",
                type: "list",
                choices: [
                    { name: "bug", value: "bug" },
                    {
                        name: "enhancement (new feature or request)",
                        value: "enhancement",
                    },
                    {
                        name: "documentation (improvements or additions)",
                        value: "documentation",
                    },
                    { name: "question" },
                    { name: "other" },
                ],
            },
            { name: "title", message: "Enter title:", type: "input" },
            { name: "description", message: "Enter description:", type: "input" },
            { name: "confirm", message: "Submit issue?", type: "confirm" },
        ])
            .then(function (answers) {
            const { type, title, description, confirm } = answers;
            if (confirm) {
                const issue = shell.exec(`gh issue create --title "${title}" --body "${description}" --label "${type}" --repo github.com/AsgereDreemurr/CLI-ITU"`, { async: false, silent: true });
                if (issue.stderr !== "") {
                    console.error(chalk.red(issue.stderr.trim()));
                    return;
                }
                console.log("âœ” issue submitted:", issue.stdout.trim());
                console.log("Thanks for the feedback!");
            }
        })
            .catch(function (error) {
            if (error.isTtyError) {
                console.error("The prompt couldn't be rendered in the current environment");
            }
            else {
                console.error("Something went wrong while showing the issue prompt");
            }
        });
    }
}
exports.default = Feedback;
Feedback.description = "report a bug or suggest an issue to improve the CLI. \n Requires Github CLI installed to create the issue. To manually submit, use the --noprompt flag.";
Feedback.flags = {
    help: command_1.flags.help({ char: "h" }),
    noprompt: command_1.flags.boolean({
        char: "n",
        description: "turn off the issue prompt and open the issues page for the CLI instead",
    }),
};
