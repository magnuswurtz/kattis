"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const shell = require("shelljs");
class Kattis extends command_1.Command {
    async run() {
        const { args } = this.parse(Kattis);
        if (args.action === "fetch") {
            shell.exec(`curl -s https://open.kattis.com/problems/${args.problem_ID}/file/statement/samples.zip > samples.zip && unzip -o samples.zip && rm samples.zip`, { async: false });
            this.log("âœ…Fetch complete!");
            shell.exit(0);
        }
    }
}
exports.default = Kattis;
Kattis.description = `
    fetch: downloads sample data files to directory. WARNING: the program will overwrite existing data files of the same name.
  `;
Kattis.flags = {
    help: command_1.flags.help({ char: "h" }),
};
Kattis.args = [
    { name: "action", options: ["fetch"], required: true },
    { name: "problem_ID", required: true },
];
